{"version":3,"sources":["InfoCard.js","Marker.js","API.js","App.js","serviceWorker.js","index.js"],"names":["InfoCard","mapLink","this","props","detail","name","addr","focused","phone","id","focusId","className","onClick","e","note","style","display","icon","adult","child","href","target","rel","label","leadingIcon","timestamp","React","Component","Marker","color","num","anchor","iconMarkup","renderToStaticMarkup","CustomIcon","Leaflet","DivIcon","html","iconAnchor","position","csv2Json","csv","lines","split","colNames","slice","map","line","obj","col","str","idx","API","fetch","then","it","text","content","forEach","coordinates","require","notes","App","init","a","featchMaskData","maskRawData","drawMarkers","setInterval","navigator","geolocation","getCurrentPosition","mapRef","leafletElement","panTo","L","LatLng","coords","latitude","longitude","err","window","screen","lockOrientation","undefined","localStorage","flag","getItem","console","log","setState","dialogIsOpen","bounds","getBounds","leftTop","getNorthWest","rightBottom","getSouthEast","data","filter","getZoom","topBound","bottomBound","leftBound","rightBound","isMobile","innerWidth","_topBound","lat","_bottomBound","_leftBound","lng","_rightBound","h","innerHeight","cardListRef","offsetHeight","w","offsetWidth","latLng","periods","maskData","state","zoom","defaultCenter","markers","key","idx1","findIndex","it2","idx2","width","Math","abs","scrollTo","height","childNodes","cards","Map","ref","center","minZoom","maxZoom","onMoveend","TileLayer","attribution","url","onScroll","timeoutFun","clearTimeout","setTimeout","round","scrollLeft","open","action","isDefault","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b5525d1.chunk.js","sourcesContent":["import React from 'react';\nimport './InfoCard.scss';\n\nimport '@material/react-card/index.scss';\nimport '@material/react-icon-button/index.scss';\nimport '@material/react-chips/index.scss';\nimport '@material/react-material-icon/index.scss';\n\nimport Card, {\n  CardPrimaryContent,\n  CardActions,\n  CardActionButtons,\n  CardActionIcons\n} from \"@material/react-card\";\nimport {Chip} from '@material/react-chips';\nimport IconButton from '@material/react-icon-button';\nimport MaterialIcon from '@material/react-material-icon';\n\nexport default class InfoCard extends React.Component {\n  render() {\n    // const mapLink = `http://maps.apple.com/?q=${this.props.detail.name}&sll=${this.props.detail.position[0]},${this.props.detail.position[1]}&z=12`;\n    const mapLink = `http://maps.google.com/?q=${this.props.detail.name}-${this.props.detail.addr}`;\n    const phone = `tel:${this.props.detail.phone}`;\n    const focused = this.props.detail.id === this.props.focusId ? \"focused\" : \"\";\n    return (\n      <Card className={`mdc-card demo-card info-card ${focused}`} onClick={e => {this.props.onClick(e)}}>\n        <CardPrimaryContent className='demo-card__primary-action'>\n        <div className=\"card__primary\">\n          <h2>{this.props.detail.name}</h2>\n          <h3>{this.props.detail.addr}</h3>\n          <div className=\"note\"><div>{this.props.detail.note}</div></div>\n          <div className=\"maskNum\">\n            <span style={{display: 'inline-flex'}}><MaterialIcon icon='face' />： {this.props.detail.adult}</span>\n            <span style={{display: 'inline-flex'}}><MaterialIcon icon='child_care'/>： {this.props.detail.child}</span>\n          </div>\n        </div>\n        </CardPrimaryContent>\n        <CardActions>\n          <CardActionButtons>\n          <a href={mapLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"no-decoration\">\n          <Chip\n            label=\"在地圖中開啟\"\n            leadingIcon={<MaterialIcon icon='map' />}/>\n            </a>\n          </CardActionButtons>\n          <CardActionIcons>\n            {/* <a href={phone} className=\"no-decoration\">\n            <IconButton>\n              <MaterialIcon icon='call' />\n            </IconButton>\n            </a> */}\n            <div>{this.props.detail.timestamp}</div>\n          </CardActionIcons>\n          \n        </CardActions>\n      </Card>\n\n    );\n  }\n}\n","import React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport './App.scss';\n\nimport '@material/react-typography/index.scss';\nimport '@material/react-card/index.scss';\nimport '@material/react-icon-button/index.scss';\nimport '@material/react-material-icon/index.scss';\n\nimport { Marker as LeafletMarker } from 'react-leaflet'\nimport Leaflet from 'leaflet'\n\nexport default class Marker extends React.Component {\n  \n  render() {\n    const num = this.props.num || 0;\n    let color;\n    if(num > 50) color = \"green\";\n    else if(num > 10) color = \"orange\";\n    else if(num > 0) color = \"red\";\n    else  color = \"gray\";\n\n    let focused = \"\";\n    let anchor = [14, 30];\n    if(this.props.id === this.props.focusId) {\n      focused = \"focused\";\n      anchor = [24, 48];\n    }\n    \n\n    const iconMarkup = renderToStaticMarkup(<i className=\"material-icons\">place</i>);\n    const CustomIcon = new Leaflet.DivIcon({\n      className: `custom-icon ${color} ${focused}`,\n      html: iconMarkup,\n      iconAnchor: anchor,\n    })\n    return <LeafletMarker \n      icon={CustomIcon}\n      position={this.props.position} \n      onClick={(e) => {\n        this.props.onClick(e);\n      }}\n      >\n      </LeafletMarker>\n  }\n}\n","class API {\n    static async featchMaskData() {\n        const content = await fetch(\"https://raw.githubusercontent.com/lycheetw/mask_raw_data/master/maskdata_latest.csv\").then(it => it.text()).then(it => csv2Json(it));\n        const obj = {}\n        content.forEach(it => {\n            obj[it[\"醫事機構代碼\"]] = it\n        })\n        return obj;\n    }\n}\n\nfunction csv2Json(csv) {\n    const lines = csv.split('\\r\\n')\n    const colNames = lines[0].split(',');\n    return lines.slice(1).map(line => {\n        const obj = {};\n        const col = line.split(',');\n        colNames.map((str, idx) => obj[str] = col[idx]);\n        return obj;\n    })\n}\n\nexport default API","import React from 'react';\nimport './App.scss';\n\nimport '@material/react-typography/index.scss';\nimport '@material/react-card/index.scss';\nimport '@material/react-icon-button/index.scss';\nimport '@material/react-material-icon/index.scss';\nimport '@material/react-dialog/index.scss';\n\nimport { Map, TileLayer } from 'react-leaflet'\nimport InfoCard from './InfoCard'\nimport Marker from './Marker'\nimport API from './API'\nimport L from 'leaflet'\n\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  DialogFooter,\n  DialogButton,\n} from '@material/react-dialog';\n\nconst coordinates = require(\"./data/coordinates.json\");\nconst notes = require(\"./data/notes.json\");\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      zoom: 16,\n      defaultCenter: [25.044463, 121.543273],\n      maskData: [],\n      focusId: -1,\n      dialogIsOpen: false,\n    }\n    this.maskRawData = {};\n    \n    this.init();\n  }\n\n  init = async () => {\n    this.maskRawData = await API.featchMaskData();\n    this.drawMarkers();\n\n    setInterval(async () => {\n      this.maskRawData = await API.featchMaskData();\n      this.drawMarkers();\n    }, 60 * 1000);\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.mapRef.leafletElement.panTo(new L.LatLng(position.coords.latitude, position.coords.longitude));\n      }, err => {});\n    }\n\n    if(window.screen.lockOrientation) {\n      window.screen.lockOrientation(\"portrait\");\n    }\n\n    if(localStorage !== undefined) {\n      let flag = localStorage.getItem('Notification_0419');\n      console.log(flag);\n      if(localStorage.getItem('Notification_0419') == null) {\n          this.setState({dialogIsOpen: true});\n          // localStorage.setItem('Notification_0419', \"true\");\n          // localStorage.removeItem(\"Notification_0419\");\n      }\n    }\n  }\n\n  drawMarkers = async () => {\n    // const center = this.mapRef.leafletElement.getCenter(); \n    const bounds = this.mapRef.leafletElement.getBounds();\n    const leftTop = bounds.getNorthWest();\n    const rightBottom = bounds.getSouthEast();\n\n\n    const data = coordinates.filter(it => {\n      //篩選可視範圍內的資料點，因為手機與桌機版型不同(資料卡清單擺放位置不同)，而分開處理。\n\n      if(this.mapRef.leafletElement.getZoom() < 14) {\n        return false;\n      }\n      \n      const isMobile = window.innerWidth < 480;\n      const _topBound = leftTop.lat;;\n      const _bottomBound = rightBottom.lat;\n      const _leftBound = leftTop.lng;\n      const _rightBound = rightBottom.lng;\n\n      let topBound, bottomBound, leftBound, rightBound;\n      \n      if(isMobile) {\n        const h = _topBound - _bottomBound;\n        topBound = _topBound - h * 0.05;\n        bottomBound = topBound - h * ((window.innerHeight - this.cardListRef.offsetHeight) / window.innerHeight) * 0.9;\n\n        const w = _rightBound - _leftBound;\n        leftBound = _leftBound + w * 0.05;\n        rightBound = _rightBound - w * 0.05;\n      } else {\n        const h = _topBound - _bottomBound;\n        topBound = _topBound - h * 0.05;\n        bottomBound = _bottomBound + h * 0.05;\n\n        const w = _rightBound - _leftBound;\n        leftBound = _leftBound + w * 0.05;\n        rightBound = _leftBound + w * ((window.innerWidth - this.cardListRef.offsetWidth) / window.innerWidth);\n      }\n      return it[\"latLng\"][0] < topBound && it[\"latLng\"][0] > bottomBound\n          && it[\"latLng\"][1] > leftBound && it[\"latLng\"][1] < rightBound\n    }).filter(it => this.maskRawData[it.id])\n    .map(it => {\n      return {\n        id: it.id,\n        name: this.maskRawData[it.id][\"醫事機構名稱\"],\n        addr: this.maskRawData[it.id][\"醫事機構地址\"],\n        phone: this.maskRawData[it.id][\"醫事機構電話\"],\n        position: it.latLng,\n        adult: this.maskRawData[it.id][\"成人口罩剩餘數\"],\n        child: this.maskRawData[it.id][\"兒童口罩剩餘數\"],\n        timestamp: this.maskRawData[it.id][\"來源資料時間\"],\n        note: notes[it.id].note,\n        periods: notes[it.id].periods\n      }\n    });\n    \n    this.setState({\n      maskData: data\n    });\n  }\n\n  render() {\n    const markers = this.state.maskData.map(it => {\n      return <Marker key={it.id} id={it.id} position={it.position} focusId={this.state.focusId} num={it.adult}\n        onClick={e => {\n          const idx1 = this.state.maskData.findIndex(it2 => it.id === it2.id);\n          const idx2 = this.state.maskData.findIndex(it2 => this.state.focusId === it2.id);\n          const isMobile = window.innerWidth < 480;\n\n          if(isMobile) {\n            const width = this.cardListRef.offsetWidth;\n            if(Math.abs(idx1 - idx2) > 5) {\n              this.cardListRef.scrollTo({'behavior': 'auto', 'left': width * idx1});\n            } else {\n              this.cardListRef.scrollTo({'behavior': 'smooth', 'left': width * idx1});\n            }\n          } else {\n            const height = this.cardListRef.childNodes[0].offsetHeight + 10;\n            if(Math.abs(idx1 - idx2) > 5) {\n              this.cardListRef.scrollTo({'behavior': 'auto', 'top': height * idx1});\n            } else {\n              this.cardListRef.scrollTo({'behavior': 'smooth', 'top': height * idx1});\n            }\n          }\n          \n          this.setState({\n            focusId: it.id\n          });\n        }}\n        />\n    });\n\n    const cards = this.state.maskData.map(it => {\n      return <InfoCard key={it.id} \n        detail={it}\n        focusId={this.state.focusId}\n        onClick={e => {\n          const isMobile = window.innerWidth < 480;\n          if(!isMobile) {\n            const height = this.cardListRef.childNodes[0].offsetHeight + 10;\n            const idx = this.state.maskData.findIndex(it2 => it.id === it2.id);\n            this.cardListRef.scrollTo({'behavior': 'smooth', 'top': height * idx});\n            this.setState({\n              focusId: it.id\n            });\n          }\n        }}\n      />\n    });\n    //https://tile-b.openstreetmap.fr/hot/{z}/{x}/{y}.png\n    //https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}@2x.png\n    //https://a.tile.openstreetmap.de/{z}/{x}/{y}.png\n    return (\n      <div id=\"root-continer\">\n      <Map id=\"map-continer\" \n        ref={(ref) => this.mapRef = ref}\n        center={this.state.defaultCenter} \n        zoom={this.state.zoom}\n        minZoom={8}\n        maxZoom={19}\n        onMoveend={e =>  {\n            this.drawMarkers();\n          }\n        }\n        >\n        <TileLayer\n          attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {markers}\n      </Map>\n      <div id=\"list-continer\"\n        ref={(ref) => this.cardListRef = ref}\n        onScroll={e => {\n          if(this.timeoutFun) {\n            clearTimeout(this.timeoutFun);\n          }\n          this.timeoutFun = setTimeout(() => {\n            const width = this.cardListRef.offsetWidth;\n            let idx;\n            const isMobile = window.innerWidth < 480;\n            // 手機版讓focus的資料卡保持在中央。\n            if(isMobile) {\n              idx = Math.round(this.cardListRef.scrollLeft / width);\n              this.cardListRef.scrollTo({'behavior': 'smooth', 'left': width * idx});\n              this.setState({\n                focusId: this.state.maskData[idx].id\n              });\n            } else {\n              \n            }\n          }, 50);\n        }}\n        >\n        {cards}\n      </div>\n\n      <Dialog open={this.state.dialogIsOpen}>\n        <DialogTitle>重要通知</DialogTitle>\n        <DialogContent>\n          即日起，口罩已售完或是當日停止販售之藥局，不會顯示在地圖上面。\n        </DialogContent>\n        <DialogFooter>\n          <DialogButton action='accept' isDefault>確定</DialogButton>\n        </DialogFooter>\n      </Dialog>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}